# encoding: utf-8
class OrdersController < ApplicationController

  def index
    if params[:search_number_like].present?
      @orders = Order.includes(:order_items).where("orders.number like ?","%"+params[:search_number_like]).page(params[:page]).per(@every_page_count)
      #@order_items = OrderItem.includes(:order).where("orders.number like ?","%"+params[:search_number_like]).page(params[:page]).per(@every_page_count).group_by{|item|item.order}
    else
      @orders = Order.includes(:order_items).page(params[:page]).per(@every_page_count)

      #@order_items = OrderItem.page(params[:page]).per(@every_page_count).group_by{|item|item.order}
    end
    @number_like = params[:search_number_like]
  end

  def create
    @mini_client = MiniClient.find(params[:mini_client_id])
    @products = Product.all
    if  request.get?
      @order = @mini_client.orders.build({:created_user_id=>@current_user.id})
      @contact_people = @mini_client.contact_people
    else
      @order = @mini_client.orders.build(params[:order])
      result = true
      begin
        ActiveRecord::Base.transaction do
          @order.save!
          OrderItem.custom_build(@order,params[:order_items])
          @mini_client.update_attribute(:status_num,4)
        end
      rescue
        result = false
      end
      if result
        redirect_to :controller => "mini_clients",:action=>"my_serve_clients"
      else
        redirect_to :back
        flash[:alert] = "产品不能为空！"
      end
    end
  end

  def ajax_apply_destroy
    return unless request.delete?
    @order = Order.find(params[:id])
    @order.destroy
    @orders = Order.includes(:order_items).page(params[:page]).per(@every_page_count)
    redirect_to :action=>"index"
    #ActiveRecord::Base.transaction do
    #  # cate=>2表示这是一个删除操作的审核
    #  @check_item = @order.check_items.build(:attrs=>{},
    #                                         :name=>"#{@current_user.name}申请删除订单#{@order.number}",
    #                                         :description=>"#{@current_user.name}申请删除订单#{@order.number}，请您审核！",
    #                                         :cate=>2)
    #  @check_item.save
    #  @check_item.users << @check_item.users << User.have_permission("orders-check")
    #  @order.update_attribute(:check_status,2)
    #end
    #render :nothing => true
  end

  #申请修改订单
  def ajax_apply_update
    @order = Order.find(params[:id])
    @client = @order.client
    if request.get?
      @products = Product.all
      render :partial => "ajax_update"
    else
      ActiveRecord::Base.transaction do
        @order.update_attributes(params[:order])
        @order.order_items.delete_all
        OrderItem.custom_build(@order,params[:order_items])
      end
      render :partial => "index_tr",:locals => {:order=>@order}
    end
  end

  def ajax_show
    @order = Order.includes(:order_items).find(params[:id])
    render :partial=>"ajax_show"
  end

  def ajax_index
    @orders = Order.includes(:order_items).all
    render :partial => "orders/ajax_index"
  end

  def ajax_create
    @mini_client = MiniClient.find(params[:mini_client_id])
    @products = Product.all
    if request.get?
      @order = @mini_client.orders.build({:created_user_id=>@current_user.id})
      @contact_people = @mini_client.contact_people
      render :partial => "/mini_clients/ajax_show/order/ajax_create"
    else
      #params[:order] = params[:order].update({:check_status =>1})
      @order = @mini_client.orders.build(params[:order].merge(:check_status => 1))
      ActiveRecord::Base.transaction do
        @order.save!
        OrderItem.custom_build(@order,params[:order_items])
        @mini_client.update_attribute(:status_num,4)

        @check_item = @order.check_items.build(
            :cate=>0,
            :attrs=>{:check_status=>0},
            :name=>"【#{@current_user.name}】为客户【#{@mini_client.name}】新建了订单",
            :description=>"【#{@current_user.name}】为客户【#{@mini_client.name}】新建了订单，订单编号为【#{@order.number}】，需要要审核！"
        )
        @check_item.save
        @check_item.users = Permission.find_by_cate(31).users
      end
      order_show_index
      render :partial => "/mini_clients/ajax_show/order/order_index"
    end
  end

  #修改订单，订单项
  def ajax_update_order_item
    @mini_client = MiniClient.find(params[:mini_client_id])
    @contact_people = @mini_client.contact_people
    @order_item = OrderItem.find(params[:order_item_id])
    @order = @order_item.order
    if request.get?
      @products = Product.all
      render :partial => "/mini_clients/ajax_show/order/ajax_update_order_item"
    else
      change_text = @order_item.change_text(params[:order_item])
      if change_text.present?
        ActiveRecord::Base.transaction do
          #更新订单的描述信息，并把状态更改为修改审核中
          @order.update_attributes(params[:order].merge(:check_status=>2))
          #创建审核对象
          @check_item = @order_item.check_items.build(
              :attrs=>params[:order_item],
              :name=>"【#{@current_user.name}】修改了订单【#{@order.number}】中产品【#{@order_item.product_name}】的信息",
              :description=>"修改的内容为【#{@order_item.change_text(params[:order_item])}】"
          )
          @check_item.save
          @check_item.users = Permission.find_by_cate(31).users
        end
        order_show_index
        render :partial => "/mini_clients/ajax_show/order/order_index"
      else
        render :text => "failed"
      end

    end
  end

  #订单相关审核
  def check
    @check_item = CheckItem.find(params[:id])
    if @check_item.cate == 0
      if params[:result] == "true"
        @check_item.check_resource.update_attributes(@check_item.attrs)
        @check_item.update_attributes(:checked_user_id=>@current_user.id,:is_checked=>true,:is_approval=>true)
      elsif params[:result] == "false"
        @check_item.update_attributes(:checked_user_id=>@current_user.id,:is_checked=>true,:is_approval=>false)
        @check_item.check_resource.destroy
      end
    elsif @check_item.cate == 1
      @order_item = @check_item.check_resource
      ActiveRecord::Base.transaction do
        if params[:result] == "true"
          @order_item.update_attributes(@check_item.attrs)
          @order_item.order.update_attribute(:check_status,0)
          @order_item.paid_items.delete_all
          @order_item.paid_items.create(:received_amount=>@check_item.attrs[:received_amount])
          @check_item.update_attributes(:checked_user_id=>@current_user.id,:is_checked=>true,:is_approval=>true)
        elsif params[:result] == "false"
          @check_item.update_attributes(:checked_user_id=>@current_user.id,:is_checked=>true,:is_approval=>false)
          @order_item.order.update_attribute(:check_status,0)
        end
      end
    elsif @check_item.cate == 2
      @order_item = @check_item.check_resource
      ActiveRecord::Base.transaction do
        if params[:result] == "true"
          @order_item.order.update_attribute(:check_status,0)
          @order_item.paid_items.create(@check_item.attrs)
          @check_item.update_attributes(:checked_user_id=>@current_user.id,:is_checked=>true,:is_approval=>true)
        elsif params[:result] == "false"
          @check_item.update_attributes(:checked_user_id=>@current_user.id,:is_checked=>true,:is_approval=>false)
          @order_item.order.update_attribute(:check_status,0)
        end
      end
    end
    redirect_to :back
    flash[:notice] = "审核完成"
  end


  #增加付款项
  def add_paid_item
    @order_item = OrderItem.find(params[:id])
    @order = @order_item.order
    #@paid_item= @order_item.paid_items.build(params[:paid_item])
    ActiveRecord::Base.transaction do
      #@paid_item.save!
      @check_item = @order_item.check_items.create(
          :cate=>2,
          :attrs=>params[:paid_item],
          :name=>"订单【#{@order.number}】中产品【#{@order_item.product_name}】增加了付款",
          :description=>"增加的付款数量为：【#{params[:paid_item][:received_amount]}】"
      )
      @order.update_attribute(:check_status,2)
      @check_item.users = Permission.find_by_cate(31).users
    end
    @mini_client = @order.mini_client
    #@orders = @mini_client.orders
    order_show_index
    render :partial => "/mini_clients/ajax_show/order/order_index"
  end



  private

  def order_show_index
    @order_items = @mini_client.order_items.includes(:order).where('orders.check_status = ?',0).group_by{|item|item.order}
    @checking_orders = @mini_client.orders.includes(:order_items).where("check_status in (?)",[1,2,3])
  end

end
